La herencia es la capacidad de una subclase para heredar atributos y métodos predeterminados, protegidos y públicos de sus superclases. Cada objeto (excepto java.lang.Object) se puede convertir en un objeto de una de sus superclases. Sin embargo, un objeto no se puede convertir a una clase que no sea pariente de él. Aquí hay un ejemplo de herencia:
Tenemos la clase de todos los seres vivos que tienen atributos como el peso y la edad. Tenemos las clases de animales, plantas, virus y hongos que son subclases de la clase de todos los seres vivos. Los animales tienen sus atributos únicos (órganos, pelo, etc.) y métodos (caminar, aparearse, etc.). También heredan los atributos y métodos de su superclase. Los animales pueden ser tratados (emitidos) a los seres vivos. Sin embargo, los animales no pueden ser tratados como hongos.
En la programación orientada a objetos, la herencia también depende de los modificadores de nivel de acceso. Por ejemplo, los atributos y métodos privados no se pueden heredar. Los atributos y métodos virtuales pueden ser sombreados / anulados. En Java, todos los atributos y métodos son implícitamente virtuales. La variable de objeto puede almacenar una referencia a la misma clase o subclase (es decir, esta o una versión más especializada). Sin embargo, las variables de objeto no pueden almacenar referencias a una superclase (es decir, una versión menos especializada) de la clase original.