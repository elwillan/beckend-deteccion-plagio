En la programación orientada a objetos, la herencia es una forma de formar nuevas clases (instancias de las cuales se denominan objetos) utilizando clases que ya se han definido. El concepto de herencia fue inventado en 1967 para Simula
La herencia proporciona el soporte para la representación por categorización en lenguajes de computadora. La categorización es un poderoso mecanismo de procesamiento de información, crucial para el aprendizaje humano a través de la generalización y la economía cognitiva (se necesita almacenar menos información sobre cada entidad específica, solo sus particularidades).
Las nuevas clases, conocidas como clases derivadas, asumen (o heredan) los atributos y el comportamiento de las clases preexistentes, que se denominan clases base (o clases ancestrales). Su objetivo es ayudar a reutilizar el código existente con poca o ninguna modificación.
La herencia también a veces se llama generalización, porque las relaciones is-a representan una jerarquía entre clases de objetos. Por ejemplo, una "fruta" es una generalización de "manzana", "naranja", "mango" y muchos otros. Uno puede considerar que la fruta es una abstracción de manzana, naranja, etc. Por el contrario, dado que las manzanas son frutas (es decir, una manzana es una fruta), las manzanas pueden heredar naturalmente todas las propiedades comunes a todas las frutas, como ser un contenedor carnoso para la semilla de una planta.
Una ventaja de la herencia es que los módulos con interfaces suficientemente similares pueden compartir una gran cantidad de código, lo que reduce la complejidad del programa. La herencia, por lo tanto, tiene otra visión, una dual, llamada polimorfismo, que describe muchas piezas de código controladas por un código de control compartido.
La herencia generalmente se logra anulando (reemplazando) uno o más métodos expuestos por antepasado, o agregando nuevos métodos a los expuestos por un antepasado.
La herencia compleja, o la herencia utilizada dentro de un diseño que no es lo suficientemente maduro, puede conducir al problema de YoYo.