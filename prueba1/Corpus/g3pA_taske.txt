En el campo de la informática, el término "programación dinámica" se refiere al estilo de programación que divide un gran problema en subproblemas más pequeños y, en general, permite encontrar la solución óptima. Cuando el problema se divide en subproblemas, estos pueden dividirse en problemas más pequeños, y así sucesivamente, hasta que ya no se puedan reducir.
También es común que la programación dinámica haga uso de la recursividad y que guarde los resultados anteriores para un cálculo más rápido más adelante; Esto también conduce a una mayor eficiencia, ya que los cálculos no se están rehaciendo. Por ejemplo, cuando un problema se reduce a subproblemas, y luego se reducen aún más, puede ser que haya subproblemas comunes, por lo que solo se necesita hacer un cálculo y guardar el resultado para ayudar a resolver más de un subproblema.
Un ejemplo de esta ganancia en eficiencia es un problema de búsqueda de caminos. Si hay dos rutas distintas en una red de 10 nodos, etiquetados de A a J, entonces si las dos rutas comparten una sección común (digamos, entre los nodos B y D), el costo de esa sección debe calcularse para la primera ruta y salvado. Luego, cuando se procesa la segunda ruta, el costo de B a D no necesita calcularse nuevamente.
En general, la programación dinámica se utiliza en problemas de optimización, donde se necesita la solución más eficiente. Las áreas donde este tipo de programación es útil es en IA, gráficos de computadora, rutinas de compresión y aplicaciones biomédicas.