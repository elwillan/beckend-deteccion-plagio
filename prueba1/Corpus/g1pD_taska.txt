La herencia es un método para formar nuevas clases usando clases predefinidas. Las nuevas clases se denominan clases derivadas y heredan los comportamientos y atributos de las clases base. Se pretendía permitir que el código existente se volviera a utilizar con una alteración mínima o nula. También ofrece soporte para la representación por categorización en lenguajes de computadora; Este es un poderoso mecanismo de procesamiento de información, vital para el aprendizaje humano a través de la generalización y la economía cognitiva. La herencia se denomina ocasionalmente generalización debido al hecho de que las relaciones is-a representan una jerarquía entre clases de objetos. La herencia tiene la ventaja de reducir la complejidad de un programa ya que los módulos con interfaces muy similares pueden compartir mucho código. Debido a esto, la herencia tiene otra vista llamada polimorfismo, donde muchas secciones de código están siendo controladas por algún código de control compartido. La herencia normalmente se logra anulando uno o más métodos expuestos por un antepasado, o creando nuevos métodos además de los expuestos por un antepasado. La herencia tiene una variedad de usos. Cada uso diferente se centra en diferentes propiedades, por ejemplo, el comportamiento externo de los objetos, la estructura interna de un objeto, la estructura de la jerarquía de herencia o las propiedades de herencia de ingeniería de software. Ocasionalmente es ventajoso diferenciar entre estos usos, ya que no es necesariamente perceptible del contexto.