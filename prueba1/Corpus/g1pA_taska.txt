En la programación orientada a objetos, los objetos se agrupan en clases según su tipo, estructura y las funciones que se pueden realizar en ellos. La herencia es un proceso en la programación orientada a objetos en el que los objetos adquieren (o heredan) las propiedades de los objetos de otra clase. Por lo tanto, se utiliza para crear relaciones entre un objeto y otro. Cada clase agrupa objetos de un tipo similar, con propiedades similares. Este proceso puede formar nuevas clases cuyos objetos tendrán propiedades de ambas clases a partir de las cuales se forma esta nueva clase. Una superclase tiene todas las propiedades de las subclases debajo de ella. Al mismo tiempo, las subclases son distintas entre sí, pero están relacionadas a través de la superclase. Se dice que las subclases "extienden" las superclases. Debido a estas relaciones, los programas orientados a objetos tienden a ser más fáciles de modificar, ya que no necesitan cambiarse cuando se agrega un nuevo objeto, con diferentes propiedades. En cambio, se crea un nuevo objeto para heredar las propiedades de los objetos que ya existen. La herencia se puede dividir en dos procesos principales: herencia única y herencia múltiple. La herencia única significa que la clase solo puede heredar de otra clase, mientras que la herencia múltiple permite la herencia de varias clases.