En matemáticas y ciencias de la computación, la programación dinámica es un método para resolver problemas que exhibe las propiedades de subproyectos superpuestos y una subestructura óptima. El término fue utilizado originalmente en la década de 1940 por Richard Bellman para describir el proceso de resolución de problemas donde uno necesita encontrar las mejores decisiones una tras otra. Para 1953, había refinado esto al significado moderno. La contribución de Bellman se recuerda en el nombre de la ecuación de Bellman, un resultado central de la programación dinámica que reafirma un problema de optimización en forma recursiva. La palabra "programación" en "programación dinámica" no tiene ninguna conexión particular con la programación de computadoras, y en su lugar proviene del término "programación matemática", un sinónimo de optimización. Por lo tanto, el "programa" es el plan óptimo para la acción que se produce. Por ejemplo, un cronograma finalizado de eventos en una exposición a veces se llama programa. La programación, en este sentido, significa encontrar un plan de acción aceptable, un algoritmo.
La programación dinámica generalmente toma uno de dos enfoques, el enfoque de arriba hacia abajo, el problema se divide en subproblemas, y estos subproblemas se resuelven y se recuerdan las soluciones, en caso de que necesiten resolverse nuevamente. Esta es la recursividad y la memorización combinadas entre sí y el enfoque de abajo hacia arriba, todos los subproblemas que podrían ser necesarios se resuelven por adelantado y luego se utilizan para construir soluciones a problemas más grandes. Este enfoque es ligeramente mejor en el espacio de la pila y el número de llamadas a funciones, pero a veces no es intuitivo descubrir todos los subproblemas necesarios para resolver el problema dado.
Algunos lenguajes de programación pueden memorizar automáticamente el resultado de una llamada de función con un conjunto particular de argumentos, para acelerar la llamada por nombre. Algunos idiomas lo hacen posible de forma portátil (por ejemplo, Scheme, Common Lisp o Perl), algunos necesitan extensiones especiales. Esto solo es posible para una función referencialmente transparente.