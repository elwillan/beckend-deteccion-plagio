En la programación orientada a objetos, la herencia es la capacidad de especificar que una clase sea una subclase de otra; Esto conduce a una jerarquía de clases, con las clases secundarias heredando y especializando, y a veces agregando, la funcionalidad y las estructuras de datos de las clases principales. La jerarquía que se forma también es útil para la organización de clases y objetos, ya que define una relación entre el niño y el padre (la clase hija es un "tipo de" la clase padre). La herencia es útil para situaciones en las que varias clases comparten características comunes, como funciones necesarias o variables de datos. Además de esto, se puede hacer referencia a las clases secundarias en términos de sus clases principales, lo que puede ser útil al almacenar grandes estructuras de datos de objetos de varias clases, a las que se puede hacer referencia como una clase base. La herencia es un aspecto central de la programación orientada a objetos, y está disponible de una forma u otra en la mayoría, si no todos, los lenguajes orientados a objetos disponibles en la actualidad. La mayoría de estos idiomas proporcionan una palabra clave "extender", que se utiliza para subclasificar a otra. Además, las funciones y las variables de datos que heredan las subclases se pueden controlar mediante el uso de modificadores de visibilidad.